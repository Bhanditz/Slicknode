import java.text.SimpleDateFormat

/*
 * Copyright 2016 Dionysis Lorentzos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.7"
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
  }
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka'


group = 'com.lorentzos.slicknode'
version = project.versionName

def libUser = rootProject.hasProperty('bintray_user') ? bintray_user : "DUMMY_USER"
def libKey = rootProject.hasProperty('bintray_key') ? bintray_key : "DUMMY_KEY"
def libName = 'Slicknode'
def libDescription = 'Makes Android Wear apis readable by wrapping them with RxKotlin'
def mavenPackageType = 'aar'
def mavenDeveloperId = 'diolor'
def mavenDeveloperName = 'Dionysis Lorentzos'
def mavenDeveloperEmail = 'ddl449@gmail.com'
def libWebsite = "https://github.com/diolor/Slicknode"
def libTrackerUrl = "https://github.com/diolor/Slicknode/issues"
def libGit = "https://github.com/diolor/Slicknode.git"



def projectPomSetup = {
  packaging mavenPackageType
  name libName
  url libWebsite

  licenses {
    license {
      name 'The Apache Software License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    }
  }
  developers {
    developer {
      id mavenDeveloperId
      name mavenDeveloperName
      email mavenDeveloperEmail
    }
  }
  scm {
    connection libGit
    developerConnection libGit
    url libWebsite
  }
}


install {
  repositories.mavenInstaller {
    pom.project projectPomSetup
  }
}

task installLocaly(type: Upload) {
  configuration = configurations.archives
  repositories.mavenDeployer {
    pom.project projectPomSetup

    repository(url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
    setUniqueVersion false
  }
}


bintray {
  user = libUser
  key = libKey
  configurations = ['archives']
  pkg {
    repo = "maven"
    name = libName
    desc = libDescription
    websiteUrl = libWebsite
    issueTrackerUrl = libTrackerUrl
    vcsUrl = libGit
    licenses = ['Apache-2.0']
    labels = ['aar', 'android', 'wear', 'rxkotlin', 'kotlin', 'node']
    pkg.version {
      pkg.version.name = versionName
      released =
          new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZ", Locale.ENGLISH).format(new Date())
      vcsTag = versionName
    }
  }
}



task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
  outputFormat = 'javadoc'
  outputDirectory = "$buildDir/javadoc"
}

task dokkaJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
  classifier = 'javadoc'
  from dokkaJavadoc.outputDirectory
}

artifacts {
  archives dokkaJavadocJar
  archives sourcesJar
}